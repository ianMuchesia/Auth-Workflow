"""create all tables again

Revision ID: 9218af46cd69
Revises: e907ea2ab026
Create Date: 2024-01-18 15:20:02.369603

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9218af46cd69'
down_revision: Union[str, None] = 'e907ea2ab026'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('verificationToken', sa.String(), nullable=False),
    sa.Column('isVerified', sa.Boolean(), nullable=False),
    sa.Column('verified', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('passwordToken', sa.String(), nullable=True),
    sa.Column('passwordTokenExpires', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('role', sa.Enum('admin', 'user', name='role_types'), nullable=False),
    sa.Column('internal_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('internal_id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_unique_constraint('uq_users_id', 'users', ['id'])

    op.create_table('tasks',
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('internal_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('internal_id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=True)
    op.create_unique_constraint('uq_tasks_id', 'tasks', ['id'])

    op.create_table('tokens',
    sa.Column('refreshToken', sa.String(), nullable=False),
    sa.Column('ip', sa.String(), nullable=False),
    sa.Column('userAgent', sa.String(), nullable=False),
    sa.Column('isValid', sa.Boolean(), nullable=False),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('internal_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('internal_id')
    )
    op.create_index(op.f('ix_tokens_id'), 'tokens', ['id'], unique=True)
    op.create_unique_constraint('uq_tokens_id', 'tokens', ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tokens_id'), table_name='tokens')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
